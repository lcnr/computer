test[#0]:
  ~0.max_size(): 21
test[#0]:
  ~0.max_size(): 21
inner[#0]:
  ~0.max_size(): 218
outer[#1]:
  ~0.max_size(): 145
inner_test[#0]:
  ~0.max_size(): 21
outer_test[#1]:
  ~0.max_size(): 21
func[#0]:
  ~0.max_size(): 42
inner[#1]:
  ~0.max_size(): 190
second[#2]:
  ~0.max_size(): 190
is_prime[#0]:
  ~0.max_size(): 121
  ~1.max_size(): 21
  ~2.max_size(): 258
is_prime_recurse[#1]:
  ~0.max_size(): 121
  ~1.max_size(): 21
  ~2.max_size(): 264
  ~3.max_size(): 21
  ~4.max_size(): 177
test[#2]:
  ~0.max_size(): 81
  ~1.max_size(): 87
  ~2.max_size(): 21
fibonacci[#0]:
  ~0.max_size(): 121
  ~1.max_size(): 42
  ~2.max_size(): 759
five[#1]:
  ~0.max_size(): 218
ten[#2]:
  ~0.max_size(): 218
check[#0]:
  ~0.max_size(): 50
  ~1.max_size(): 31
  ~2.max_size(): 63
test_u8[#1]:
  ~0.max_size(): 61
test_u16[#2]:
  ~0.max_size(): 68
test[#0]:
  ~0.max_size(): 21
maybe[#0]:
  ~0.max_size(): 20
  ~1.max_size(): 28
  ~2.max_size(): 42
maybe_some[#1]:
  ~0.max_size(): 197
maybe_none[#2]:
  ~0.max_size(): 113
temporaries[#0]:
  ~0.max_size(): 123
  ~1.max_size(): 123
  ~2.max_size(): 123
  ~3.max_size(): 288
test[#1]:
  ~0.max_size(): 190
scoped[#0]:
  ~0.max_size(): 42
scoped_test[#1]:
  ~0.max_size(): 190
simple_scope[#0]:
  ~0.max_size(): 42
test[#1]:
  ~0.max_size(): 190
break_empty[#0]:
  ~0.max_size(): 42
test[#1]:
  ~0.max_size(): 190
break_var[#0]:
  ~0.max_size(): 42
test[#1]:
  ~0.max_size(): 190
block_break[#0]:
  ~0.max_size(): 21
ret[#0]:
  ~0.max_size(): 42
test[#1]:
  ~0.max_size(): 190
test[#0]:
  ~0.max_size(): 90
invert_bool[#0]:
  ~0.max_size(): 21
test[#0]:
  ~0.max_size(): 21
true[#0]:
  ~0.max_size(): 21
false[#1]:
  ~0.max_size(): 21
test[#2]:
  ~0.max_size(): 100
type_ascription[#0]:
  ~0.max_size(): 157
test[#1]:
  ~0.max_size(): 246
test[#0]:
  ~0.max_size(): 11
  ~1.max_size(): 51
  ~2.max_size(): 51
  ~3.max_size(): 21
extend_field[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 65
  ~1.max_size(): 21
  ~2.max_size(): 21
use_field[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 168
  ~1.max_size(): 21
  ~2.max_size(): 127
extend[#0]:
  ~0.max_size(): 49
test[#1]:
  ~0.max_size(): 133
  ~1.max_size(): 21
  ~2.max_size(): 127
extend_arg[#0]:
  ~0.max_size(): 101
test[#1]:
  ~0.max_size(): 161
  ~1.max_size(): 21
  ~2.max_size(): 127
test[#0]:
  ~0.max_size(): 21
access[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 218
test[#0]:
  ~0.max_size(): 60
  ~1.max_size(): 173
  ~2.max_size(): 4
  ~3.max_size(): 127
  ~4.max_size(): 21
mov[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 332
  ~1.max_size(): 127
  ~2.max_size(): 21
field_access[#0]:
  ~0.max_size(): 157
test[#1]:
  ~0.max_size(): 246
func[#0]:
  ~0.max_size(): 431
test[#1]:
  ~0.max_size(): 274
if_simple[#0]:
  ~0.max_size(): 20
  ~1.max_size(): 21
  ~2.max_size(): 21
true[#1]:
  ~0.max_size(): 71
false[#2]:
  ~0.max_size(): 71
used_match[#0]:
  ~0.max_size(): 60
  ~1.max_size(): 32
  ~2.max_size(): 157
  ~3.max_size(): 135
test[#1]:
  ~0.max_size(): 253
test[#0]:
  ~0.max_size(): 40
true[#1]:
  ~0.max_size(): 54
false[#2]:
  ~0.max_size(): 66
match_fn[#0]:
  ~0.max_size(): 60
  ~1.max_size(): 42
  ~2.max_size(): 14
u32[#1]:
  ~0.max_size(): 225
invert[#0]:
  ~0.max_size(): 20
  ~1.max_size(): 21
  ~2.max_size(): 21
if_chain[#1]:
  ~0.max_size(): 60
  ~1.max_size(): 32
  ~2.max_size(): 32
  ~3.max_size(): 4
  ~4.max_size(): 32
  ~5.max_size(): 32
  ~6.max_size(): 157
if_empty[#2]:
  ~0.max_size(): 4
  ~1.max_size(): 32
  ~2.max_size(): 4
  ~3.max_size(): 42
  ~4.max_size(): 14
  ~5.max_size(): 14
test_if_empty[#3]:
  ~0.max_size(): 190
test_chain[#4]:
  ~0.max_size(): 190
test[#0]:
  ~0.max_size(): 4
  ~1.max_size(): 21
  ~2.max_size(): 21
bool[#0]:
  ~0.max_size(): 21
arm[#1]:
  ~0.max_size(): 53
  ~1.max_size(): 21
  ~2.max_size(): 47
underscore[#0]:
  ~0.max_size(): 4
  ~1.max_size(): 21
  ~2.max_size(): 21
test[#1]:
  ~0.max_size(): 64
init_var[#0]:
  ~0.max_size(): 60
  ~1.max_size(): 42
  ~2.max_size(): 14
empty[#1]:
  ~0.max_size(): 204
u32[#2]:
  ~0.max_size(): 225
infer_type[#0]:
  ~0.max_size(): 395
test[#1]:
  ~0.max_size(): 190
many_loops[#0]:
  ~0.max_size(): 395
test[#1]:
  ~0.max_size(): 190
cond_exit[#0]:
  ~0.max_size(): 32
  ~1.max_size(): 171
  ~2.max_size(): 278
zero[#1]:
  ~0.max_size(): 218
three[#2]:
  ~0.max_size(): 218
one_hundred[#3]:
  ~0.max_size(): 218
loopidoo[#0]:
  ~0.max_size(): 42
test[#1]:
  ~0.max_size(): 190
while_simple[#0]:
  ~0.max_size(): 32
  ~1.max_size(): 131
  ~2.max_size(): 135
test[#1]:
  ~0.max_size(): 190
default_type[#0]:
  ~0.max_size(): 21
test[#1]:
  ~0.max_size(): 64
break_sum[#0]:
  ~0.max_size(): 121
  ~1.max_size(): 21
  ~2.max_size(): 21
break_zero[#1]:
  ~0.max_size(): 75
break_one[#2]:
  ~0.max_size(): 87
test[#0]:
  ~0.max_size(): 21
test_u32[#0]:
  ~0.max_size(): 32
  ~1.max_size(): 57
  ~2.max_size(): 4
  ~3.max_size(): 47
  ~4.max_size(): 4
  ~5.max_size(): 31
  ~6.max_size(): 21
test_u16[#0]:
  ~0.max_size(): 11
  ~1.max_size(): 31
  ~2.max_size(): 21
logical[#0]:
  ~0.max_size(): 20
  ~1.max_size(): 20
  ~2.max_size(): 4
  ~3.max_size(): 21
  ~4.max_size(): 20
  ~5.max_size(): 21
  ~6.max_size(): 21
logical_test[#1]:
  ~0.max_size(): 67
  ~1.max_size(): 73
  ~2.max_size(): 21
div_subtest[#0]:
  ~0.max_size(): 134
rem[#1]:
  ~0.max_size(): 365
bitand_int[#0]:
  ~0.max_size(): 205
bitand_bool[#1]:
  ~0.max_size(): 29
bitand_bool2[#2]:
  ~0.max_size(): 29
int_test[#3]:
  ~0.max_size(): 246
bool_true[#4]:
  ~0.max_size(): 61
bool_false[#5]:
  ~0.max_size(): 73
bool2[#6]:
  ~0.max_size(): 73
gt[#0]:
  ~0.max_size(): 115
gt_lower[#1]:
  ~0.max_size(): 87
gt_equal[#2]:
  ~0.max_size(): 87
gt_greater[#3]:
  ~0.max_size(): 75
mul[#0]:
  ~0.max_size(): 133
test[#1]:
  ~0.max_size(): 190
shl[#0]:
  ~0.max_size(): 395
test[#1]:
  ~0.max_size(): 190
div_big[#0]:
  ~0.max_size(): 423
  ~1.max_size(): 127
  ~2.max_size(): 21
zero_two_u32[#1]:
  ~0.max_size(): 246
zero_two_u16[#2]:
  ~0.max_size(): 134
lte[#0]:
  ~0.max_size(): 115
tle_less[#1]:
  ~0.max_size(): 92
tle_eq[#2]:
  ~0.max_size(): 92
tle_gt[#3]:
  ~0.max_size(): 92
eq_int[#0]:
  ~0.max_size(): 270
eq_int_test[#1]:
  ~0.max_size(): 109
  ~1.max_size(): 115
  ~2.max_size(): 21
test[#0]:
  ~0.max_size(): 137
  ~1.max_size(): 115
  ~2.max_size(): 21
one_u16[#0]:
  ~0.max_size(): 134
one_u32[#1]:
  ~0.max_size(): 246
simple[#0]:
  ~0.max_size(): 92
shr[#0]:
  ~0.max_size(): 133
test[#1]:
  ~0.max_size(): 190
bitor_int[#0]:
  ~0.max_size(): 205
bitor_bool[#1]:
  ~0.max_size(): 29
bitor_bool2[#2]:
  ~0.max_size(): 29
test_int[#3]:
  ~0.max_size(): 246
test_bool[#4]:
  ~0.max_size(): 84
  ~1.max_size(): 84
  ~2.max_size(): 4
  ~3.max_size(): 78
  ~4.max_size(): 21
parenthesis_a[#0]:
  ~0.max_size(): 860
ops[#1]:
  ~0.max_size(): 246
run0[#2]:
  ~0.max_size(): 21
na[#0]:
  ~0.max_size(): 42
test[#1]:
  ~0.max_size(): 190
negate[#0]:
  ~0.max_size(): 71
negate_test[#1]:
  ~0.max_size(): 71
shadow[#0]:
  ~0.max_size(): 550
test[#1]:
  ~0.max_size(): 218
add[#0]:
  ~0.max_size(): 157
increment[#1]:
  ~0.max_size(): 145
test[#2]:
  ~0.max_size(): 218
to_bytes_u32[#0]:
  ~0.max_size(): 299
to_bytes_u16[#1]:
  ~0.max_size(): 149
delayed[#0]:
  ~0.max_size(): 42
test[#1]:
  ~0.max_size(): 190

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out

