test[#0]:
  ~0.max_size(): 19
test[#0]:
  ~0.max_size(): 19
inner[#0]:
  ~0.max_size(): 142
outer[#1]:
  ~0.max_size(): 87
inner_test[#0]:
  ~0.max_size(): 19
outer_test[#1]:
  ~0.max_size(): 19
func[#0]:
  ~0.max_size(): 34
inner[#1]:
  ~0.max_size(): 122
second[#2]:
  ~0.max_size(): 122
is_prime[#0]:
  ~0.max_size(): 73
  ~1.max_size(): 19
  ~2.max_size(): 146
is_prime_recurse[#1]:
  ~0.max_size(): 73
  ~1.max_size(): 19
  ~2.max_size(): 150
  ~3.max_size(): 19
  ~4.max_size(): 146
test[#2]:
  ~0.max_size(): 49
  ~1.max_size(): 53
  ~2.max_size(): 19
fibonacci[#0]:
  ~0.max_size(): 73
  ~1.max_size(): 34
  ~2.max_size(): 343
five[#1]:
  ~0.max_size(): 142
ten[#2]:
  ~0.max_size(): 142
check[#0]:
  ~0.max_size(): 36
  ~1.max_size(): 27
  ~2.max_size(): 49
test_u8[#1]:
  ~0.max_size(): 35
test_u16[#2]:
  ~0.max_size(): 40
test[#0]:
  ~0.max_size(): 19
maybe[#0]:
  ~0.max_size(): 18
  ~1.max_size(): 24
  ~2.max_size(): 34
maybe_some[#1]:
  ~0.max_size(): 127
maybe_none[#2]:
  ~0.max_size(): 71
temporaries[#0]:
  ~0.max_size(): 74
  ~1.max_size(): 74
  ~2.max_size(): 74
  ~3.max_size(): 164
test[#1]:
  ~0.max_size(): 122
scoped[#0]:
  ~0.max_size(): 34
scoped_test[#1]:
  ~0.max_size(): 122
simple_scope[#0]:
  ~0.max_size(): 34
test[#1]:
  ~0.max_size(): 122
break_empty[#0]:
  ~0.max_size(): 34
test[#1]:
  ~0.max_size(): 122
break_var[#0]:
  ~0.max_size(): 34
test[#1]:
  ~0.max_size(): 122
block_break[#0]:
  ~0.max_size(): 19
ret[#0]:
  ~0.max_size(): 34
test[#1]:
  ~0.max_size(): 122
test[#0]:
  ~0.max_size(): 56
invert_bool[#0]:
  ~0.max_size(): 19
test[#0]:
  ~0.max_size(): 19
true[#0]:
  ~0.max_size(): 19
false[#1]:
  ~0.max_size(): 19
test[#2]:
  ~0.max_size(): 50
type_ascription[#0]:
  ~0.max_size(): 91
test[#1]:
  ~0.max_size(): 162
test[#0]:
  ~0.max_size(): 10
  ~1.max_size(): 46
  ~2.max_size(): 46
  ~3.max_size(): 19
extend_field[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 37
  ~1.max_size(): 19
  ~2.max_size(): 19
use_field[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 102
  ~1.max_size(): 19
  ~2.max_size(): 93
extend[#0]:
  ~0.max_size(): 39
test[#1]:
  ~0.max_size(): 77
  ~1.max_size(): 19
  ~2.max_size(): 93
extend_arg[#0]:
  ~0.max_size(): 67
test[#1]:
  ~0.max_size(): 97
  ~1.max_size(): 19
  ~2.max_size(): 93
test[#0]:
  ~0.max_size(): 19
access[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 142
test[#0]:
  ~0.max_size(): 45
  ~1.max_size(): 121
  ~2.max_size(): 5
  ~3.max_size(): 93
  ~4.max_size(): 19
mov[#0]:
  ~0.max_size(): 14
test[#1]:
  ~0.max_size(): 214
  ~1.max_size(): 93
  ~2.max_size(): 19
field_access[#0]:
  ~0.max_size(): 91
test[#1]:
  ~0.max_size(): 162
func[#0]:
  ~0.max_size(): 241
test[#1]:
  ~0.max_size(): 182
if_simple[#0]:
  ~0.max_size(): 18
  ~1.max_size(): 19
  ~2.max_size(): 19
true[#1]:
  ~0.max_size(): 43
false[#2]:
  ~0.max_size(): 43
used_match[#0]:
  ~0.max_size(): 42
  ~1.max_size(): 25
  ~2.max_size(): 91
  ~3.max_size(): 78
test[#1]:
  ~0.max_size(): 167
test[#0]:
  ~0.max_size(): 36
true[#1]:
  ~0.max_size(): 30
false[#2]:
  ~0.max_size(): 38
match_fn[#0]:
  ~0.max_size(): 42
  ~1.max_size(): 34
  ~2.max_size(): 14
u32[#1]:
  ~0.max_size(): 147
invert[#0]:
  ~0.max_size(): 18
  ~1.max_size(): 19
  ~2.max_size(): 19
if_chain[#1]:
  ~0.max_size(): 34
  ~1.max_size(): 25
  ~2.max_size(): 25
  ~3.max_size(): 5
  ~4.max_size(): 25
  ~5.max_size(): 25
  ~6.max_size(): 91
if_empty[#2]:
  ~0.max_size(): 5
  ~1.max_size(): 25
  ~2.max_size(): 5
  ~3.max_size(): 34
  ~4.max_size(): 14
  ~5.max_size(): 14
test_if_empty[#3]:
  ~0.max_size(): 122
test_chain[#4]:
  ~0.max_size(): 122
test[#0]:
  ~0.max_size(): 5
  ~1.max_size(): 19
  ~2.max_size(): 19
bool[#0]:
  ~0.max_size(): 19
arm[#1]:
  ~0.max_size(): 29
  ~1.max_size(): 19
  ~2.max_size(): 25
underscore[#0]:
  ~0.max_size(): 5
  ~1.max_size(): 19
  ~2.max_size(): 19
test[#1]:
  ~0.max_size(): 38
init_var[#0]:
  ~0.max_size(): 42
  ~1.max_size(): 34
  ~2.max_size(): 14
empty[#1]:
  ~0.max_size(): 132
u32[#2]:
  ~0.max_size(): 147
infer_type[#0]:
  ~0.max_size(): 229
test[#1]:
  ~0.max_size(): 122
many_loops[#0]:
  ~0.max_size(): 229
test[#1]:
  ~0.max_size(): 122
cond_exit[#0]:
  ~0.max_size(): 25
  ~1.max_size(): 106
  ~2.max_size(): 155
zero[#1]:
  ~0.max_size(): 142
three[#2]:
  ~0.max_size(): 142
one_hundred[#3]:
  ~0.max_size(): 142
loopidoo[#0]:
  ~0.max_size(): 34
test[#1]:
  ~0.max_size(): 122
while_simple[#0]:
  ~0.max_size(): 25
  ~1.max_size(): 82
  ~2.max_size(): 78
test[#1]:
  ~0.max_size(): 122
default_type[#0]:
  ~0.max_size(): 19
test[#1]:
  ~0.max_size(): 38
break_sum[#0]:
  ~0.max_size(): 73
  ~1.max_size(): 19
  ~2.max_size(): 19
break_zero[#1]:
  ~0.max_size(): 45
break_one[#2]:
  ~0.max_size(): 53
test[#0]:
  ~0.max_size(): 19
test_u32[#0]:
  ~0.max_size(): 25
  ~1.max_size(): 43
  ~2.max_size(): 5
  ~3.max_size(): 37
  ~4.max_size(): 5
  ~5.max_size(): 27
  ~6.max_size(): 19
test_u16[#0]:
  ~0.max_size(): 10
  ~1.max_size(): 27
  ~2.max_size(): 19
logical[#0]:
  ~0.max_size(): 18
  ~1.max_size(): 18
  ~2.max_size(): 5
  ~3.max_size(): 19
  ~4.max_size(): 18
  ~5.max_size(): 19
  ~6.max_size(): 19
logical_test[#1]:
  ~0.max_size(): 39
  ~1.max_size(): 43
  ~2.max_size(): 19
div_subtest[#0]:
  ~0.max_size(): 86
rem[#1]:
  ~0.max_size(): 203
bitand_int[#0]:
  ~0.max_size(): 123
bitand_bool[#1]:
  ~0.max_size(): 23
bitand_bool2[#2]:
  ~0.max_size(): 23
int_test[#3]:
  ~0.max_size(): 162
bool_true[#4]:
  ~0.max_size(): 35
bool_false[#5]:
  ~0.max_size(): 43
bool2[#6]:
  ~0.max_size(): 43
gt[#0]:
  ~0.max_size(): 69
gt_lower[#1]:
  ~0.max_size(): 53
gt_equal[#2]:
  ~0.max_size(): 53
gt_greater[#3]:
  ~0.max_size(): 45
mul[#0]:
  ~0.max_size(): 83
test[#1]:
  ~0.max_size(): 122
shl[#0]:
  ~0.max_size(): 229
test[#1]:
  ~0.max_size(): 122
div_big[#0]:
  ~0.max_size(): 263
  ~1.max_size(): 93
  ~2.max_size(): 19
zero_two_u32[#1]:
  ~0.max_size(): 162
zero_two_u16[#2]:
  ~0.max_size(): 86
lte[#0]:
  ~0.max_size(): 69
tle_less[#1]:
  ~0.max_size(): 58
tle_eq[#2]:
  ~0.max_size(): 58
tle_gt[#3]:
  ~0.max_size(): 58
eq_int[#0]:
  ~0.max_size(): 170
eq_int_test[#1]:
  ~0.max_size(): 69
  ~1.max_size(): 73
  ~2.max_size(): 19
test[#0]:
  ~0.max_size(): 89
  ~1.max_size(): 69
  ~2.max_size(): 19
one_u16[#0]:
  ~0.max_size(): 86
one_u32[#1]:
  ~0.max_size(): 162
simple[#0]:
  ~0.max_size(): 58
shr[#0]:
  ~0.max_size(): 83
test[#1]:
  ~0.max_size(): 122
bitor_int[#0]:
  ~0.max_size(): 123
bitor_bool[#1]:
  ~0.max_size(): 23
bitor_bool2[#2]:
  ~0.max_size(): 23
test_int[#3]:
  ~0.max_size(): 162
test_bool[#4]:
  ~0.max_size(): 52
  ~1.max_size(): 52
  ~2.max_size(): 5
  ~3.max_size(): 48
  ~4.max_size(): 19
parenthesis_a[#0]:
  ~0.max_size(): 472
ops[#1]:
  ~0.max_size(): 162
run0[#2]:
  ~0.max_size(): 19
na[#0]:
  ~0.max_size(): 34
test[#1]:
  ~0.max_size(): 122
negate[#0]:
  ~0.max_size(): 49
negate_test[#1]:
  ~0.max_size(): 43
shadow[#0]:
  ~0.max_size(): 310
test[#1]:
  ~0.max_size(): 142
add[#0]:
  ~0.max_size(): 91
increment[#1]:
  ~0.max_size(): 87
test[#2]:
  ~0.max_size(): 142
to_bytes_u32[#0]:
  ~0.max_size(): 193
to_bytes_u16[#1]:
  ~0.max_size(): 99
delayed[#0]:
  ~0.max_size(): 34
test[#1]:
  ~0.max_size(): 122

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out

