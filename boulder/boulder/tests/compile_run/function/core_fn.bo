# fn empty() -> Empty
# fn empty_explicit() -> Empty
# fn const() -> 12
# fn identity(2) -> 2
# fn identity(58923) -> 58923
# fn identity_comma(56) -> 56
# fn add(3) -> 4
# fn add_rev(5) -> 6
# fn add_identical(2) -> 4
# fn paranthesis_a(1,1) -> 1
# fn paranthesis_b(1,1) -> 0
# fn assignment(1) -> 3
# fn variable_shadow(1) -> 2

fn empty() {}
fn empty_explicit() -> Empty {}
fn const() -> u32 { 12 }
fn identity(a: u32) -> u32 { a }
fn identity_comma(a: u32,) -> u32 { a }
fn add(a: u32) -> u32 { a + 1 }
fn add_rev(a: u32) -> u32 { 1 + a }
fn add_identical(a: u32) -> u32 { a + a }
fn parenthesis_a(a: u32, b: u32) -> u32 {
    a + b + 1*(a- b * b) - b
}
fn parenthesis_b(a: u32, b: u32) -> u32 {
    (a + b - (b + a))
}
fn assignment(a: u32) -> u32 {
    let b: u32 = a + 1;
    b + a
}
fn variable_shadow(a: u32) -> u32 {
    let a: u32 = a + 1;
    a
}
